// Source code generated by AppGPT (www.appgpt.tech)

 //Class to create tables and seed new database
import { DataSource } from "typeorm";
import { DBConfiguration } from "./Configuration";
import { SettingsEntity } from "./db/Settings.entity";
//autogenerate imports based on resources
import { UsersEntity } from "./db/Users.entity";
import { CardsEntity } from "./db/Cards.entity";
import { SetsEntity } from "./db/Sets.entity";
import { InventoryEntity } from "./db/Inventory.entity";
import { WishlistEntity } from "./db/Wishlist.entity";

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [SettingsEntity, UsersEntity, CardsEntity, SetsEntity, InventoryEntity, WishlistEntity];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables


    await Database.Seed();
  }
  static async Seed() {
    let data: any = {"Users":[{"UserName":"Ash Ketchum","email":"ashketchum@pokevault.com"},{"UserName":"Misty Waterflower","email":"mistywaterflower@pokevault.com"},{"UserName":"Brock Slate","email":"brockslate@pokevault.com"}],"Cards":[{"CardName":"Pikachu","serial":"25","type":"Electric","rarity":"Common","condition":"Mint","imageurl":"pikachu.png","set":"Base Set"},{"CardName":"Charizard","serial":"6","type":"Fire","rarity":"Rare","condition":"Near Mint","imageurl":"charizard.png","set":"Base Set"},{"CardName":"Blastoise","serial":"9","type":"Water","rarity":"Rare","condition":"Good","imageurl":"blastoise.png","set":"Base Set"}],"Sets":[{"SetName":"Base Set","ReleaseDate":"1999-01-09","TotalCards":"102"},{"SetName":"Jungle","ReleaseDate":"1999-06-16","TotalCards":"64"},{"SetName":"Fossil","ReleaseDate":"1999-10-10","TotalCards":"62"}],"Inventory":[{"user":"Ash Ketchum","card":"Pikachu","DateAddedToInventory":"2022-02-02"},{"user":"Misty Waterflower","card":"Blastoise","DateAddedToInventory":"2022-02-15"},{"user":"Brock Slate","card":"Charizard","DateAddedToInventory":"2022-02-20"}],"Wishlist":[{"user":"Ash Ketchum","card":"Charizard","DateInserted":"2022-02-21"},{"user":"Misty Waterflower","card":"Pikachu","DateInserted":"2022-02-22"},{"user":"Brock Slate","card":"Blastoise","DateInserted":"2022-02-23"}]};
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true){
      console.log('   Seeding database...');
      await this.SeedResource("UsersEntity", data.Users);
await this.SeedResource("CardsEntity", data.Cards);
await this.SeedResource("SetsEntity", data.Sets);
await this.SeedResource("InventoryEntity", data.Inventory);
await this.SeedResource("WishlistEntity", data.Wishlist); 
      await this.SeedResource("SettingsEntity", {
        settingname: "isSeeded",
        settingvalue: "true",
      });
    }else{
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository("SettingsEntity");
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: "isSeeded",
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table '+resourceName);
    await repo.upsert(resourceData, ["id"]);
  }
}

